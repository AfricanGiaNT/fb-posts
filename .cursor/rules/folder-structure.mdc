---
description: 
globs: 
alwaysApply: false
---
Perfect ‚Äî let‚Äôs now repurpose those rules and structure for your AI Facebook Content Generator project. I‚Äôll align everything with what we‚Äôve built so far: Markdown-based input, tone-driven AI transformation, and Airtable integration.

Here‚Äôs the revised version üëá

‚∏ª

üìÅ Folder Structure: AI Facebook Content Generator

üîê Root Directory

This directory houses all files, rules, scripts, and configurations related to the content generation pipeline built using Cursor AI.

‚∏ª

/scripts/: Core Logic and Automation

Contains backend logic and automation scripts.

Subfolder	Purpose	Example Files
transform/	Markdown ‚Üí Facebook post transformer scripts	generate_post.py, apply_tone_style.js
utils/	Shared helper functions (e.g., tone selector, emoji formatter)	tone_picker.py, markdown_parser.js
integration/	Connectors to Airtable, Telegram, Notion	airtable_upload.py, telegram_send_draft.js



‚∏ª

/config/: Configuration Files

File	Purpose
openai_key.env	API key for GPT-4o
airtable_config.json	Base/table schema reference
persona_settings.json	Brand voice, tone rules, and prompts



‚∏ª

/rules/: AI Behavior & Tone Rules

Markdown files defining:
	‚Ä¢	Brand tone templates
	‚Ä¢	Prompt structures
	‚Ä¢	Style guides for AI output

Example: tone_guidelines.mdc, persona_phrases.mdc, ai_prompt_structure.mdc

‚∏ª

/content/: Input and Output

Folder	Contents
markdown_logs/	Raw .md input files from project logs
generated_drafts/	AI-generated Facebook post drafts
reviewed_drafts/	Final edited versions post-review



‚∏ª

/docs/: Internal Documentation
	‚Ä¢	README.md: Project overview and setup
	‚Ä¢	instructions.md: Step-by-step usage guide
	‚Ä¢	workflow_diagram.md: Visual explanation of the content pipeline

‚∏ª


‚∏ª

üß† Instructions for AI & Developer Guidelines
	‚Ä¢	Maintain a flat and modular folder structure for easy scalability.
	‚Ä¢	All AI transformation logic should be reusable and centralized under scripts/transform/.
	‚Ä¢	Use environment variables from /config/ for all API keys and tokens ‚Äî no hardcoding.
	‚Ä¢	Brand tone samples and persona behaviors must be kept in /rules/ as .mdc files.
	‚Ä¢	If a new channel is added (e.g., LinkedIn or email), mirror the structure inside /scripts/ and /rules/ with appropriate naming (e.g., linkedin_transform.py).
	‚Ä¢	Use Airtable only as the source of truth for content tracking and review status.

‚∏ª